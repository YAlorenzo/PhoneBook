{"version":3,"file":"static/js/883.ed8be53d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/formInput/formInput.module.css?7266","components/formInput/FormInput.jsx","webpack://react-homework-template/./src/components/contacts/contacts.module.css?6b98","components/contacts/Contacts.jsx","webpack://react-homework-template/./src/components/search/search.module.css?a5f1","components/search/Search.jsx","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"formInput_modal__w6nDG\",\"active\":\"formInput_active__I834o\",\"from\":\"formInput_from__XXMrf\",\"input_name\":\"formInput_input_name__cRdDS\",\"buttonAdd\":\"formInput_buttonAdd__apLl4\",\"my-input-class\":\"formInput_my-input-class__KX1dz\"};","\nimport { useState } from \"react\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css'\nimport css from \"./formInput.module.css\";\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contactsOperation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { activeAction } from \"redux/activeSlice\";\n\nexport default function FormInput({ active, }) {\n    const navigete = useNavigate();\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts.items);\n    const activeState = useSelector(state => state.active);\n\n    const [number, setNumber] = useState('');\n    const [name, setName] = useState('');\n\n\n    const onSubmit = (evnt, numberValue) => {\n    evnt.preventDefault();\n    const form = evnt.currentTarget;\n    const name = form.elements.name.value;\n    const number = numberValue;\n        \n    const contact = {\n      name,\n      number,\n      id: nanoid(10),\n    }\n    if (contacts.some(elem => elem.name.includes(contact.name))) {\n          alert('a contact with the same name already exists!')\n    }\n    else {\n        dispatch(addContact(contact));\n        dispatch(activeAction(false));\n    }\n    }\n    \n  const onClickModal = () => {\n     dispatch(activeAction(false));\n  }\n   \n   \n\n     \n   \n\n  const onChange = (evnt) => {\n        switch (evnt.currentTarget.name) {\n            case 'name':\n                setName(evnt.currentTarget.value);\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    const onChangePhone = (value) => {\n        setNumber(value)\n    }\n\n\n    const onSubmitForm = (evnt) => {\n        onSubmit(evnt, number);\n        navigete('/contacts')\n        setName('')\n        setNumber('')\n   }\n     \n    \n    return (\n            <div className={activeState ?  css.active  : css.modal} onClick={onClickModal}>\n              \n               <form onSubmit={onSubmitForm} className={css.from} onClick={e => e.stopPropagation()}>\n                    <h1>Add Contact</h1>\n                     <p>Name</p>\n                        <label htmlFor=\"name\">\n                    <input\n                       \n                 type=\"text\"\n                        name=\"name\"\n                        value={name}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={onChange}\n                        className={css.input_name}\n                    />\n                    </label>\n                    <p>Phone</p>\n                <label htmlFor=\"number\">\n                      \n                    <PhoneInput\n                        country={'us'}\n                        value={number}\n                        name=\"number\"\n                        onChange={onChangePhone}\n                        className=\"gg\"\n                        inputClass=\"my-input-class\"\n                        inputStyle={{\n                        width: '404px'\n  }}\n                    />\n\n\n                </label> \n               <button type=\"submit\" className={css.buttonAdd} onClick={active}>Add</button>\n            </form>\n            </div>\n           \n        )\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__yxT-u\",\"list\":\"contacts_list__80IZ0\",\"item\":\"contacts_item__074zI\",\"name\":\"contacts_name__XMzK3\",\"button\":\"contacts_button__Iu9lt\",\"number\":\"contacts_number__VwYBh\",\"message\":\"contacts_message__lXJ-D\",\"contact_box\":\"contacts_contact_box__83FE0\",\"cont_sear\":\"contacts_cont_sear__cW7zU\",\"add_button\":\"contacts_add_button__JzXsk\",\"userPhoto\":\"contacts_userPhoto__hFJCr\",\"user_box\":\"contacts_user_box__12jxc\"};","\nimport css from \"./contacts.module.css\";\nimport { deleteContact,} from \"redux/contactsOperation\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { activeAction } from \"redux/activeSlice\";\nimport userPhoto from './img/user.png'\nimport FormInput from \"components/formInput/FormInput\";\n\n\nexport default function Contacts({ children}) {\n   const isLoggedIn = useSelector(state => state.auth.isLoggedIn)\n   const dispatch = useDispatch()\n   const contacts = useSelector(state => state.contacts.items);\n   const filter = useSelector(state => state.filter);\n      \n    const onClickDel = (id) => {\n        console.log(id)\n        dispatch(deleteContact(id))\n    }\n\n    const openModal = () => {\n    dispatch(activeAction(true));\n    document.getElementsByName('name')[0].focus()\n  }\n    return (\n        isLoggedIn && (\n            \n            contacts.length === 0 ? (\n                <h1 className={css.message}> Oops, your contacts are empty!</h1>\n            )\n                : (\n                     <div className={css.container}>\n                <div className={css.cont_sear}> \n                    <>\n                        <div>{children}</div>\n                        <button className={css.add_button} onClick={openModal}>add contact</button>  \n                    </>\n                          \n                </div>\n                <ul className={css.list}>\n             {\n                        contacts.filter((elem => elem.name.toLowerCase().includes(filter.toLowerCase())))\n                                    .map(elem => (<li className={css.item} key={elem.id}>\n                                        <div className={css.contact_box}>\n                                            <div className={css.user_box}>\n                                              <img src={userPhoto} alt=\"kartinka\" className={css.userPhoto} />\n                                               <p className={css.name}>{elem.name}:</p> <p className={css.number}>{elem.number}</p>\n                                            </div>\n                                            <button type=\"button\"\n                                    className={css.button} onClick={() => onClickDel(elem.id)}>✖\n                                </button>\n                                       </div>\n                                \n                               </li>)) \n               }\n                </ul>\n                <FormInput/>\n            </div>    \n            )\n           \n           \n        )\n    )\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"search_container__RVs+F\",\"search\":\"search_search__E6+AT\"};","import React from \"react\";\nimport css from \"./search.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { filterAction } from \"redux/filtersSlice\";\n\n\nexport default function Search() {\n  const dispatch = useDispatch()\n    const onSearch = (evnt) => {\n     const value = evnt.currentTarget.value;\n     dispatch(filterAction(value));\n  }\n     return (\n            <div className={css.container}>\n         <input type=\"text\" onChange={onSearch} className={css.search} placeholder=\"search contact\"/>\n            </div>\n        )\n}","import Contacts from \"components/contacts/Contacts\"\nimport Search from \"components/search/Search\"\n\nexport default function ContactsPage() {\n    return (\n        <div>\n                   <Contacts>\n                      <Search/>\n                    </Contacts>\n        </div>\n        \n    )\n}"],"names":["FormInput","active","navigete","useNavigate","dispatch","useDispatch","contacts","useSelector","state","items","activeState","useState","number","setNumber","name","setName","className","css","onClick","activeAction","onSubmit","evnt","numberValue","preventDefault","contact","currentTarget","elements","value","id","nanoid","some","elem","includes","alert","addContact","e","stopPropagation","htmlFor","type","pattern","title","required","onChange","country","inputClass","inputStyle","width","Contacts","children","isLoggedIn","auth","filter","length","document","getElementsByName","focus","toLowerCase","map","src","alt","console","log","deleteContact","Search","filterAction","placeholder","ContactsPage"],"sourceRoot":""}