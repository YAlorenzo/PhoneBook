{"version":3,"file":"static/js/186.cc76ff6f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/formInput/formInput.module.css?7266","components/formInput/FormInput.jsx","webpack://react-homework-template/./src/components/buttonModal/buttonModal.module.css?d06a","components/buttonModal/ButtonModal.jsx","pages/Home.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"formInput_modal__w6nDG\",\"active\":\"formInput_active__I834o\",\"from\":\"formInput_from__XXMrf\",\"input_name\":\"formInput_input_name__cRdDS\",\"buttonAdd\":\"formInput_buttonAdd__apLl4\"};","//import hooks && operation && active -->\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contactsOperation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { activeAction } from \"redux/activeSlice\";\nimport { useState } from \"react\";\n//import node_modules --> \nimport PhoneInput from 'react-phone-input-2';\nimport { nanoid } from 'nanoid';\n//import styles --> \nimport 'react-phone-input-2/lib/style.css'\nimport css from \"./formInput.module.css\";\n\n\nexport default function FormInput({ active, }) {\n    const navigete = useNavigate();\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts.items);\n    const activeState = useSelector(state => state.active);\n\n    const [number, setNumber] = useState('');\n    const [name, setName] = useState('');\n\n\n    const onSubmit = (evnt, numberValue) => {\n    evnt.preventDefault();\n    const form = evnt.currentTarget;\n    const name = form.elements.name.value;\n    const number = numberValue;\n        \n    const contact = {\n      name,\n      number,\n      id: nanoid(10),\n    }\n    if (contacts.some(elem => elem.name.includes(contact.name))) {\n          alert('a contact with the same name already exists!')\n    }\n    else {\n        dispatch(addContact(contact));\n        dispatch(activeAction(false));\n    }\n    }\n    \n  const onClickModal = () => {\n     dispatch(activeAction(false));\n  }\n   \n   \n\n     \n   \n\n  const onChange = (evnt) => {\n        switch (evnt.currentTarget.name) {\n            case 'name':\n                setName(evnt.currentTarget.value);\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    const onChangePhone = (value) => {\n        setNumber(value)\n    }\n\n\n    const onSubmitForm = (evnt) => {\n        onSubmit(evnt, number);\n        navigete('/contacts')\n        setName('')\n        setNumber('')\n   }\n     \n    \n    return (\n            <div className={activeState ?  css.active  : css.modal} onClick={onClickModal}>\n              \n               <form onSubmit={onSubmitForm} className={css.from} onClick={e => e.stopPropagation()}>\n                    <h1>Add Contact</h1>\n                     <p>Name</p>\n                        <label htmlFor=\"name\">\n                    <input\n                       \n                 type=\"text\"\n                        name=\"name\"\n                        value={name}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={onChange}\n                        className={css.input_name}\n                    />\n                    </label>\n                    <p>Phone</p>\n                <label htmlFor=\"number\">\n                      \n                    <PhoneInput\n                        country={'us'}\n                        value={number}\n                        name=\"number\"\n                        onChange={onChangePhone}\n                        inputStyle={{\n                            width: '404px',\n                        }}\n                    />\n\n\n                </label> \n               <button type=\"submit\" className={css.buttonAdd} onClick={active}>Add</button>\n            </form>\n            </div>\n           \n        )\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"buttonModal_container__QZwh7\",\"button\":\"buttonModal_button__mZdMn\",\"title\":\"buttonModal_title__+BMVV\"};","\nimport React from \"react\";\n\n//import hooks && action --> \nimport { useDispatch } from \"react-redux\";\nimport { activeAction } from \"redux/activeSlice\";\nimport { useSelector } from \"react-redux\";\n//import styles --> \nimport css from \"./buttonModal.module.css\"\n\nexport default function ButtonModal() {\n   const isLoggedIn = useSelector(state => state.auth.isLoggedIn); \n   const name = useSelector(state => state.auth.user.name);\n\n   const upfirstLetterName = () => {\n      return name[0].toUpperCase() + name.slice(1);\n   }\n   const dispatch = useDispatch();\n   const openModal = () => {\n   dispatch(activeAction(true));\n  \n\n    document.getElementsByName('name')[0].focus()\n  }\n   return (\n   \n      isLoggedIn && (\n      <div>\n         <div className={css.container}>\n               <h1 className={css.title}>\n                  {upfirstLetterName()}, welcome to your personal phoone book!\n               </h1>\n                  <button type=\"button\" onClick={openModal} className={css.button}>Add Contact</button>  \n         </div>\n      </div>\n      )       \n       )\n}\n","import ButtonModal from \"components/buttonModal/ButtonModal\";\nimport FormInput from \"components/formInput/FormInput\";\n\nexport default function Home() {\n    return (\n        <>\n            <ButtonModal />\n             <FormInput/>\n        </>\n        \n  )\n}"],"names":["FormInput","_ref","active","navigete","useNavigate","dispatch","useDispatch","contacts","useSelector","state","items","activeState","_useState","useState","_useState2","_slicedToArray","number","setNumber","_useState3","_useState4","name","setName","_jsx","className","css","onClick","activeAction","children","_jsxs","onSubmit","evnt","numberValue","preventDefault","contact","currentTarget","elements","value","id","nanoid","some","elem","includes","alert","addContact","e","stopPropagation","htmlFor","type","pattern","title","required","onChange","PhoneInput","country","inputStyle","width","ButtonModal","isLoggedIn","auth","user","toUpperCase","slice","document","getElementsByName","focus","Home","_Fragment"],"sourceRoot":""}