{"version":3,"file":"static/js/186.9325d54f.chunk.js","mappings":"kNACA,G,QAAwB,0BAAxB,EAA0D,0BAA1D,EAA2F,wBAA3F,EAAgI,8BAAhI,EAA0K,6B,2DCU3J,SAASA,EAAT,GAAiC,IAAZC,EAAW,EAAXA,OAC1BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC5BC,GAAcH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMP,MAAV,IAErC,GAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAwDA,OACQ,gBAAKC,UAAWN,EAAeO,EAAcA,EAAWC,QAlC7C,WAClBd,GAASe,EAAAA,EAAAA,IAAa,GACxB,EAgCS,UAEG,kBAAMC,SAXI,SAACC,IA7CL,SAACA,EAAMC,GACxBD,EAAKE,iBACL,IAIMC,EAAU,CACdV,KALWO,EAAKI,cACAC,SAASZ,KAAKa,MAK9Bf,OAJaU,EAKbM,IAAIC,EAAAA,EAAAA,IAAO,KAETvB,EAASwB,MAAK,SAAAC,GAAI,OAAIA,EAAKjB,KAAKkB,SAASR,EAAQV,KAA/B,IAChBmB,MAAM,iDAGR7B,GAAS8B,EAAAA,EAAAA,IAAWV,IACpBpB,GAASe,EAAAA,EAAAA,IAAa,IAEzB,CA4BGC,CAASC,EAAMT,GACfV,EAAS,aACTa,EAAQ,IACRF,EAAU,GACd,EAMyCG,UAAWC,EAAUC,QAAS,SAAAiB,GAAC,OAAIA,EAAEC,iBAAN,EAA7D,WACK,wBAAI,iBACH,uBAAG,UACA,kBAAOC,QAAQ,OAAf,UACJ,kBAEHC,KAAK,OACExB,KAAK,OACLa,MAAOb,EACdyB,QAAQ,yHACRC,MAAM,yIACCC,UAAQ,EACRC,SAvCL,SAACrB,GAEH,SADDA,EAAKI,cAAcX,MAEnBC,EAAQM,EAAKI,cAAcE,MAMtC,EA+BmBX,UAAWC,OAGf,uBAAG,WACP,kBAAOoB,QAAQ,SAAf,UAEI,SAAC,IAAD,CACIM,QAAS,KACThB,MAAOf,EACPE,KAAK,SACL4B,SAvCE,SAACf,GACnBd,EAAUc,EACb,EAsCmBX,UAAU,KACV4B,WAAW,iBACXC,WAAY,CACZC,MAAO,cAMhB,mBAAQR,KAAK,SAAStB,UAAWC,EAAeC,QAASjB,EAAzD,SAAiE,YAM/E,C,gFCnHD,EAA4B,+BAA5B,EAAoE,4BAApE,EAAwG,2B,6BCKzF,SAAS8C,IACrB,IAAMC,GAAazC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMyC,KAAKD,UAAf,IAC9BlC,GAAOP,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMyC,KAAKC,KAAKpC,IAApB,IAKxBV,GAAWC,EAAAA,EAAAA,MAOjB,OAEG2C,IACA,0BACG,iBAAKhC,UAAWC,EAAhB,WACM,gBAAID,UAAWC,EAAf,UAdFH,EAAK,GAAGqC,cAAgBrC,EAAKsC,MAAM,GAeT,8CAErB,mBAAQd,KAAK,SAASpB,QAdnB,WAClBd,GAASe,EAAAA,EAAAA,IAAa,IAGrBkC,SAASC,kBAAkB,QAAQ,GAAGC,OACvC,EASyDvC,UAAWC,EAArD,SAAiE,oBAOlF,C,cChCc,SAASuC,IACpB,OACI,iCACI,SAACT,EAAD,KACC,SAAC/C,EAAA,EAAD,MAIZ,C","sources":["webpack://react-homework-template/./src/components/formInput/formInput.module.css?7266","components/formInput/FormInput.jsx","webpack://react-homework-template/./src/components/buttonModal/buttonModal.module.css?d06a","components/buttonModal/ButtonModal.jsx","pages/Home.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"formInput_modal__w6nDG\",\"active\":\"formInput_active__I834o\",\"from\":\"formInput_from__XXMrf\",\"input_name\":\"formInput_input_name__cRdDS\",\"buttonAdd\":\"formInput_buttonAdd__apLl4\",\"my-input-class\":\"formInput_my-input-class__KX1dz\"};","\nimport { useState } from \"react\";\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css'\nimport css from \"./formInput.module.css\";\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/contactsOperation\";\nimport { useNavigate } from \"react-router-dom\";\nimport { activeAction } from \"redux/activeSlice\";\n\nexport default function FormInput({ active, }) {\n    const navigete = useNavigate();\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => state.contacts.items);\n    const activeState = useSelector(state => state.active);\n\n    const [number, setNumber] = useState('');\n    const [name, setName] = useState('');\n\n\n    const onSubmit = (evnt, numberValue) => {\n    evnt.preventDefault();\n    const form = evnt.currentTarget;\n    const name = form.elements.name.value;\n    const number = numberValue;\n        \n    const contact = {\n      name,\n      number,\n      id: nanoid(10),\n    }\n    if (contacts.some(elem => elem.name.includes(contact.name))) {\n          alert('a contact with the same name already exists!')\n    }\n    else {\n        dispatch(addContact(contact));\n        dispatch(activeAction(false));\n    }\n    }\n    \n  const onClickModal = () => {\n     dispatch(activeAction(false));\n  }\n   \n   \n\n     \n   \n\n  const onChange = (evnt) => {\n        switch (evnt.currentTarget.name) {\n            case 'name':\n                setName(evnt.currentTarget.value);\n                break;\n            \n            default:\n                return;\n        }\n    }\n\n    const onChangePhone = (value) => {\n        setNumber(value)\n    }\n\n\n    const onSubmitForm = (evnt) => {\n        onSubmit(evnt, number);\n        navigete('/contacts')\n        setName('')\n        setNumber('')\n   }\n     \n    \n    return (\n            <div className={activeState ?  css.active  : css.modal} onClick={onClickModal}>\n              \n               <form onSubmit={onSubmitForm} className={css.from} onClick={e => e.stopPropagation()}>\n                    <h1>Add Contact</h1>\n                     <p>Name</p>\n                        <label htmlFor=\"name\">\n                    <input\n                       \n                 type=\"text\"\n                        name=\"name\"\n                        value={name}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={onChange}\n                        className={css.input_name}\n                    />\n                    </label>\n                    <p>Phone</p>\n                <label htmlFor=\"number\">\n                      \n                    <PhoneInput\n                        country={'us'}\n                        value={number}\n                        name=\"number\"\n                        onChange={onChangePhone}\n                        className=\"gg\"\n                        inputClass=\"my-input-class\"\n                        inputStyle={{\n                        width: '404px'\n  }}\n                    />\n\n\n                </label> \n               <button type=\"submit\" className={css.buttonAdd} onClick={active}>Add</button>\n            </form>\n            </div>\n           \n        )\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"buttonModal_container__QZwh7\",\"button\":\"buttonModal_button__mZdMn\",\"title\":\"buttonModal_title__+BMVV\"};","import React from \"react\";\nimport css from \"./buttonModal.module.css\"\nimport { useDispatch } from \"react-redux\";\nimport { activeAction } from \"redux/activeSlice\";\nimport { useSelector } from \"react-redux\";\n\nexport default function ButtonModal() {\n   const isLoggedIn = useSelector(state => state.auth.isLoggedIn); \n   const name = useSelector(state => state.auth.user.name);\n\n   const upfirstLetterName = () => {\n      return name[0].toUpperCase() + name.slice(1);\n   }\n   const dispatch = useDispatch();\n   const openModal = () => {\n   dispatch(activeAction(true));\n  \n\n    document.getElementsByName('name')[0].focus()\n  }\n   return (\n   \n      isLoggedIn && (\n      <div>\n         <div className={css.container}>\n               <h1 className={css.title}>\n                  {upfirstLetterName()}, welcome to your personal phoone book!\n               </h1>\n                  <button type=\"button\" onClick={openModal} className={css.button}>Add Contact</button>\n               \n         </div>\n          {/* <FormInput/> */}\n      </div>\n      )       \n       )\n}\n","import ButtonModal from \"components/buttonModal/ButtonModal\";\nimport FormInput from \"components/formInput/FormInput\";\n\nexport default function Home() {\n    return (\n        <>\n            <ButtonModal />\n             <FormInput/>\n        </>\n        \n  )\n}"],"names":["FormInput","active","navigete","useNavigate","dispatch","useDispatch","contacts","useSelector","state","items","activeState","useState","number","setNumber","name","setName","className","css","onClick","activeAction","onSubmit","evnt","numberValue","preventDefault","contact","currentTarget","elements","value","id","nanoid","some","elem","includes","alert","addContact","e","stopPropagation","htmlFor","type","pattern","title","required","onChange","country","inputClass","inputStyle","width","ButtonModal","isLoggedIn","auth","user","toUpperCase","slice","document","getElementsByName","focus","Home"],"sourceRoot":""}